{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddForm.js","App.js","index.js"],"names":["Button","text","color","onClick","className","style","backgroundColor","defaultProps","Header","title","toggleAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","propTypes","tasks","PropTypes","object","Tasks","map","AddForm","saveTask","display","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","currentTarget","checked","string","isRequired","array","App","setToggleAdd","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","deleteTask","method","filter","toggleReminder","updatedTasks","console","log","headers","body","JSON","stringify","length","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.2a62338c.chunk.js","sourcesContent":["import '../index.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({ text, color, onClick }) => {\r\n  return (\r\n    <div>\r\n      <button className='btn' style={{backgroundColor: color}} onClick={onClick}>{text}</button>\r\n    </div>\r\n  )\r\n}\r\nButton.defaultProps = {\r\n    color: 'steelblue'\r\n}\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func\r\n}\r\n\r\nexport default Button\r\n","import React from 'react';\r\nimport Button from './Button';\r\n\r\nconst Header = ({ title, toggleAdd ,showAdd}) => {\r\n  return (\r\n    <header>\r\n      <div className='header'>\r\n        <h2>{title}</h2>\r\n        <Button text={showAdd ? 'Close' : 'Add'} color={showAdd ? 'red' : 'green'} onClick={toggleAdd}/>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import {FaTimes} from 'react-icons/fa';\r\n\r\nconst Task = ( {task, onDelete, onToggle} ) => {\r\n  return (\r\n    <div className={`task ${task.reminder ? 'task-reminder':''}`} onDoubleClick={() => onToggle(task.id)}>\r\n      <h3>{task.text} <FaTimes style={{color: 'red', cursor: 'pointer'}} onClick={() => onDelete(task.id)}/></h3>\r\n      <p>{task.day}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Task\r\n","import PropTypes from 'prop-types';\r\nimport Task from './Task';\r\n\r\nconst Tasks = ( {tasks, onDelete, onToggle} ) => {\r\n    \r\n  return (\r\n    <>\r\n      {tasks.map((task) =>\r\n        <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle} />\r\n      )}\r\n    </>\r\n  )\r\n}\r\nTask.propTypes = {\r\n    tasks: PropTypes.object\r\n}\r\n\r\nexport default Tasks\r\n","import {useState} from 'react'\r\n\r\nconst AddForm = ( {saveTask, display }) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n    \r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(!text){\r\n            alert('please add a task')\r\n            return\r\n        }\r\n        saveTask({text, day, reminder})\r\n        setText('')\r\n        setDay('')\r\n        setReminder('')\r\n    }\r\n  return (\r\n    <form className='add-form' style={{display: display}} onSubmit={(e) => onSubmit(e)}>\r\n        <div className='form-control'>\r\n            <label>Add Test</label>\r\n            <input type='text' placeholder='add a text' value={text} onChange={(e) => setText(e.target.value)}/>\r\n        </div>\r\n        <div className='form-control'>\r\n            <label>Day & Time</label>\r\n            <input type='text' placeholder='add a day'value={day} onChange={(e) => setDay(e.target.value)}/>\r\n        </div>\r\n        <div className='form-control form-control-check'>\r\n            <label>Set A Reminder</label>\r\n            <input type='checkbox' value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)}/>\r\n        </div>\r\n        <input type='submit' className='btn btn-block' value='Submit Task'/>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default AddForm\r\n","import Header from './components/Header';\r\nimport PropTypes from 'prop-types';\r\nimport Tasks from './components/Tasks';\r\nimport AddForm from './components/AddForm';\r\nimport {useState, useEffect} from 'react';\r\n\r\nconst App = () => {\r\n    const[toggleAdd, setToggleAdd] = useState(false)\r\n    const [tasks, setTasks] = useState([])\r\n    useEffect(() => {\r\n        const getTasks = async () => {\r\n            const tasksFromServer = await fetchTasks()\r\n            setTasks(tasksFromServer)\r\n        }\r\n        getTasks()\r\n    }, [])\r\n    const fetchTasks = async () => {\r\n        const res = await fetch('http://localhost:8080/tasks/all')\r\n        const data = await res.json()\r\n        return data\r\n    }\r\n    const deleteTask = async (id) => {\r\n        await fetch(`http://localhost:8080/tasks/${id}`\r\n                    ,{method: 'DELETE'})\r\n        setTasks(tasks.filter((task) => task.id !== id))\r\n    }\r\n    const toggleReminder = async (id) => {\r\n        await fetch(`http://localhost:8080/tasks/${id}`\r\n        ,{method: 'PUT'})\r\n        const updatedTasks = await fetchTasks()\r\n        console.log(updatedTasks)\r\n        setTasks([updatedTasks])\r\n        setTasks(\r\n            tasks.map((task) => task.id === id ? {...task, reminder: !task.reminder} : task)\r\n            )\r\n    }\r\n    const saveTask = async (task) => {\r\n        const res = await fetch('http://localhost:8080/tasks'\r\n                                ,{method: 'POST'\r\n                                 ,headers: {'content-type' : 'application/json'}\r\n                                 ,body: JSON.stringify(task)})\r\n        const data = await res.json()\r\n        setTasks([...tasks, data])\r\n    }\r\n    return(\r\n        <div className='container'>\r\n            <Header title='Task Tracker' toggleAdd = {() => setToggleAdd(!toggleAdd)} showAdd={toggleAdd}/>\r\n            <AddForm saveTask={saveTask} display={!toggleAdd ? 'none' : 'block' }/>\r\n            {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/>: <h2>No Tasks To Show</h2>}\r\n        </div>\r\n    )\r\n}\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker'\r\n}\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    tasks: PropTypes.array\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport './index.css';\r\nimport App from './App.js';\r\n\r\nReactDom.render(<App /> , document.getElementById(\"root\"));"],"sourceRoot":""}