{"ast":null,"code":"import _toConsumableArray from\"C:/Users/Saef Rahal/Desktop/full-stack/task-tracker/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:/Users/Saef Rahal/Desktop/full-stack/task-tracker/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"C:/Users/Saef Rahal/Desktop/full-stack/task-tracker/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/Saef Rahal/Desktop/full-stack/task-tracker/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/Saef Rahal/Desktop/full-stack/task-tracker/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import Header from'./components/Header';import PropTypes from'prop-types';import Tasks from'./components/Tasks';import AddForm from'./components/AddForm';import{useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),_toggleAdd=_useState2[0],setToggleAdd=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),tasks=_useState4[0],setTasks=_useState4[1];useEffect(function(){var getTasks=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var tasksFromServer;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetchTasks();case 2:tasksFromServer=_context.sent;setTasks(tasksFromServer);case 4:case\"end\":return _context.stop();}}},_callee);}));return function getTasks(){return _ref.apply(this,arguments);};}();getTasks();},[]);var fetchTasks=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var res,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch('http://localhost:8080/tasks/all');case 2:res=_context2.sent;_context2.next=5;return res.json();case 5:data=_context2.sent;return _context2.abrupt(\"return\",data);case 7:case\"end\":return _context2.stop();}}},_callee2);}));return function fetchTasks(){return _ref2.apply(this,arguments);};}();var deleteTask=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return fetch(\"http://localhost:8080/tasks/\".concat(id),{method:'DELETE'});case 2:setTasks(tasks.filter(function(task){return task.id!==id;}));case 3:case\"end\":return _context3.stop();}}},_callee3);}));return function deleteTask(_x){return _ref3.apply(this,arguments);};}();var toggleReminder=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id){var updatedTasks;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return fetch(\"http://localhost:8080/tasks/\".concat(id),{method:'PUT'});case 2:_context4.next=4;return fetchTasks();case 4:updatedTasks=_context4.sent;console.log(updatedTasks);setTasks([updatedTasks]);setTasks(tasks.map(function(task){return task.id===id?_objectSpread(_objectSpread({},task),{},{reminder:!task.reminder}):task;}));case 8:case\"end\":return _context4.stop();}}},_callee4);}));return function toggleReminder(_x2){return _ref4.apply(this,arguments);};}();var saveTask=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(task){var res,data;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return fetch('http://localhost:8080/tasks',{method:'POST',headers:{'content-type':'application/json'},body:JSON.stringify(task)});case 2:res=_context5.sent;_context5.next=5;return res.json();case 5:data=_context5.sent;setTasks([].concat(_toConsumableArray(tasks),[data]));case 7:case\"end\":return _context5.stop();}}},_callee5);}));return function saveTask(_x3){return _ref5.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(Header,{title:\"Task Tracker\",toggleAdd:function toggleAdd(){return setToggleAdd(!_toggleAdd);},showAdd:_toggleAdd}),/*#__PURE__*/_jsx(AddForm,{saveTask:saveTask,display:!_toggleAdd?'none':'block'}),tasks.length>0?/*#__PURE__*/_jsx(Tasks,{tasks:tasks,onDelete:deleteTask,onToggle:toggleReminder}):/*#__PURE__*/_jsx(\"h2\",{children:\"No Tasks To Show\"})]});};Header.defaultProps={title:'Task Tracker'};Header.propTypes={title:PropTypes.string.isRequired,tasks:PropTypes.array};export default App;","map":{"version":3,"sources":["C:/Users/Saef Rahal/Desktop/full-stack/task-tracker/src/main/frontend/src/App.js"],"names":["Header","PropTypes","Tasks","AddForm","useState","useEffect","App","toggleAdd","setToggleAdd","tasks","setTasks","getTasks","fetchTasks","tasksFromServer","fetch","res","json","data","deleteTask","id","method","filter","task","toggleReminder","updatedTasks","console","log","map","reminder","saveTask","headers","body","JSON","stringify","length","defaultProps","title","propTypes","string","isRequired","array"],"mappings":"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","sourcesContent":["import Header from './components/Header';\r\nimport PropTypes from 'prop-types';\r\nimport Tasks from './components/Tasks';\r\nimport AddForm from './components/AddForm';\r\nimport {useState, useEffect} from 'react';\r\n\r\nconst App = () => {\r\n    const[toggleAdd, setToggleAdd] = useState(false)\r\n    const [tasks, setTasks] = useState([])\r\n    useEffect(() => {\r\n        const getTasks = async () => {\r\n            const tasksFromServer = await fetchTasks()\r\n            setTasks(tasksFromServer)\r\n        }\r\n        getTasks()\r\n    }, [])\r\n    const fetchTasks = async () => {\r\n        const res = await fetch('http://localhost:8080/tasks/all')\r\n        const data = await res.json()\r\n        return data\r\n    }\r\n    const deleteTask = async (id) => {\r\n        await fetch(`http://localhost:8080/tasks/${id}`\r\n                    ,{method: 'DELETE'})\r\n        setTasks(tasks.filter((task) => task.id !== id))\r\n    }\r\n    const toggleReminder = async (id) => {\r\n        await fetch(`http://localhost:8080/tasks/${id}`\r\n        ,{method: 'PUT'})\r\n        const updatedTasks = await fetchTasks()\r\n        console.log(updatedTasks)\r\n        setTasks([updatedTasks])\r\n        setTasks(\r\n            tasks.map((task) => task.id === id ? {...task, reminder: !task.reminder} : task)\r\n            )\r\n    }\r\n    const saveTask = async (task) => {\r\n        const res = await fetch('http://localhost:8080/tasks'\r\n                                ,{method: 'POST'\r\n                                 ,headers: {'content-type' : 'application/json'}\r\n                                 ,body: JSON.stringify(task)})\r\n        const data = await res.json()\r\n        setTasks([...tasks, data])\r\n    }\r\n    return(\r\n        <div className='container'>\r\n            <Header title='Task Tracker' toggleAdd = {() => setToggleAdd(!toggleAdd)} showAdd={toggleAdd}/>\r\n            <AddForm saveTask={saveTask} display={!toggleAdd ? 'none' : 'block' }/>\r\n            {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/>: <h2>No Tasks To Show</h2>}\r\n        </div>\r\n    )\r\n}\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker'\r\n}\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    tasks: PropTypes.array\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}